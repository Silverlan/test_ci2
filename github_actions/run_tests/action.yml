name: Run Pragma Tests
description: 'Run a Pragma Lua-script.'
inputs:
  test-scripts:
    description: 'Lua code to execute'
    required: true
    default: ''
  state:
    description: 'Set to "client" for client-side execution, otherwise "server".'
    required: true
    default: 'client'
  version:
    description: 'The version of Pragma to download (if it not already exists).'
    required: true
    default: 'nightly'
  screenshot:
    description: 'If enabled (and artifacts-name has been specified), a screenshot will be taken and uploaded as artifact after the script has been executed.'
    required: true
    default: false
  artifacts-name:
    description: 'If specified, debug files (e.g. logs) will be uploaded as artifacts under this name.'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: Test Model Import
      id: pragma
      uses: Silverlan/test_ci2/github_actions/run_script@main
      with:
        state: "${{ inputs.state }}"
        version: "${{ inputs.version }}"
        artifacts-name: "${{ inputs.artifacts-name }}"
        lua-code: |
          include(\"/tests/base.lua\")
          local scripts = {
            \"${{ inputs.test-scripts }}\"
          }
          for _,script in ipairs(scripts) do
            include(script)
          end
          local cbOnTestComplete = tests.add_event_listener(\"OnTestComplete\", function(success, errMsg)
            if(${{ inputs.screenshot }}) then
              -- Wait a few frames before taking the screenshot
              game.wait_for_frames(5, function()
                local screenshotPath = util.screenshot()
                if(screenshotPath ~= nil) then
                  file.create_directory(\"artifacts\")
                  file.copy(screenshotPath, \"artifacts/screenshot.png\")
                end
                engine.shutdown()
              end)
            else
              engine.shutdown()
            end
          end)
          tests.run()

